library(ggplot2)
install.packages("devtools")
library("devtools")
install.packages("mongolite")
library(mongolite)
con <- mongo(collection = "airbnb",
db = "dsadb",
url = "mongodb://localhost",
verbose = FALSE,
options = ssl_options())
dados <- con$find()
View(dados)
con$count('{}')
amostra1 <- con$find(
query = '{"property_type": "House}',
fields = '{"property_type": true, "cancellation_policy": true}'
)
amostra1 <- con$find(
query = '{"property_type": "House"}',
fields = '{"property_type": true, "cancellation_policy": true}'
)
View(amostra1)
amostra2 <- con$find(
query = '{"property_type": "House"}',
fields = '{"property_type": true, "cancellation_policy": true, "_id": false'
)
View(amostra2)
amostra2 <- con$find(
query = '{"property_type": "House"}',
fields = '{"property_type": true, "cancellation_policy": true, "_id": false'
)
amostra2 <- con$find(
query = '{"property_type": "House"}',
fields = '{"property_type": true, "cancellation_policy": true, "_id": false}'
)
View(amostra2)
amostra3 <- con$find(
query = '{"property_type": "House"}',
fields = '{"property_type": true, "cancellation_policy": true, "_id": false}',
sort = '{cancellation_policy: -1}'
)
amostra3 <- con$find(
query = '{"property_type": "House"}',
fields = '{"property_type": true, "cancellation_policy": true, "_id": false}',
sort = '{"cancellation_policy": -1}'
)
View(amostra3)
amostra4 <- con$aggregate(
'[{"$group": {"_id": "$property_type", "count": {"$sum":1}, "average": {"$avg": "$number_of_reviews"}}}]',
options = '{"allowDiskUse": true'
)
amostra4 <- con$aggregate(
'[{"$group": {"_id": "$property_type", "count": {"$sum":1}, "average": {"$avg": "$number_of_reviews"}}}]',
options = '{"allowDiskUse": true}'
)
resultado <- con$mapreduce(
map = "function(){emit(Math.floor(this.number_of_reviews/100)*100, 1)",
reduce = "function(id, counts){ return Array.sum(counts)}"
)
names(resultado) <- c("numeros_review", "contagem")
setwd("~/projetos_DS_R/Segmentação_de_Clientes")
getwd()
library(tidyverse)
library(dplyr)
library(ggplot2)
library(caret)
library(plotly)
library(readxl)
library(rfm)
library(stats)
library(factoextra)
carregar_dados <- function(){
sheet1 <- read_excel('online_retail_II.xlsx', sheet = 'Year 2009-2010')
sheet2 <- read_excel('online_retail_II.xlsx', sheet = 'Year 2010-2011')
dados_combinados <- rbind(sheet1, sheet2)
return(dados_combinados)
}
dados< - carregar_dados()
dim(dados)
View(dados)
carrega_dados <- function()
{
setwd('~/Dropbox/DSA/BigDataAnalytics-R-Azure/Cap06')
sheet1 <- read_excel('online_retail_II.xlsx', sheet = 'Year 2009-2010')
sheet2 <- read_excel('online_retail_II.xlsx', sheet = 'Year 2010-2011')
dados_combinados <- rbind(sheet1, sheet2)
return(dados_combinados)
}
dados <- carrega_dados()
dim(dados)
View(dados)
carrega_dados <- function()
{
setwd("~/projetos_DS_R/Segmentação_de_Clientes")
sheet1 <- read_excel('online_retail_II.xlsx', sheet = 'Year 2009-2010')
sheet2 <- read_excel('online_retail_II.xlsx', sheet = 'Year 2010-2011')
dados_combinados <- rbind(sheet1, sheet2)
return(dados_combinados)
}
dados <- carrega_dados()
dim(dados)
View(dados)
